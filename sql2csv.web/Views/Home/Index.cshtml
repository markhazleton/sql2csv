@model Sql2Csv.Web.Models.FileUploadViewModel
@{
    ViewData["Title"] = "SQLite to CSV Converter";
}

<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Hero Section -->
    <div class="text-center mb-12">
        <h1 class="text-4xl font-bold text-gradient mb-4">
            SQLite to CSV Converter
        </h1>
        <p class="text-xl text-secondary-600 max-w-2xl mx-auto">
            Upload your SQLite database and explore its schema, export tables to CSV, or generate model classes.
            A complete database analysis and export tool built with .NET 9.0.
        </p>
    </div>

    <!-- Main Content -->
    <div class="space-y-8">
        
        <!-- File Selection Tabs -->
        <div class="card max-w-2xl mx-auto" x-data="{ activeTab: '@(Model.AvailableFiles.Any() ? "existing" : "upload")' }">
            
            @if (Model.AvailableFiles.Any())
            {
                <!-- Tab Navigation -->
                <div class="card-header border-b border-secondary-200">
                    <nav class="-mb-px flex space-x-8">
                        <button @@click="activeTab = 'existing'" 
                                :class="activeTab === 'existing' ? 'border-primary-500 text-primary-600' : 'border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300'"
                                class="whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors">
                            Choose Existing File
                        </button>
                        <button @@click="activeTab = 'upload'" 
                                :class="activeTab === 'upload' ? 'border-primary-500 text-primary-600' : 'border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300'"
                                class="whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors">
                            Upload New File
                        </button>
                    </nav>
                </div>
            }
            
            <form asp-action="Upload" method="post" enctype="multipart/form-data" id="upload-form">
                
                @if (Model.AvailableFiles.Any())
                {
                    <!-- Existing Files Tab -->
                    <div x-show="activeTab === 'existing'" class="space-y-6">
                        <div class="card-header">
                            <h2 class="text-xl font-semibold text-secondary-900">Select Existing Database</h2>
                            <p class="text-secondary-600 mt-1">Choose from previously uploaded files</p>
                        </div>
                        
                        <div class="space-y-3">
                            @foreach (var file in Model.AvailableFiles)
                            {
                                <label class="flex items-center p-4 border border-secondary-200 rounded-lg hover:bg-secondary-50 cursor-pointer transition-colors">
                                    <input type="radio" name="SelectedFileId" value="@file.Id" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-secondary-300">
                                    <div class="ml-3 flex-1">
                                        <div class="flex items-center justify-between">
                                            <div>
                                                <p class="text-sm font-medium text-secondary-900">@file.OriginalFileName</p>
                                                @if (!string.IsNullOrEmpty(file.Description))
                                                {
                                                    <p class="text-xs text-secondary-600 mt-1">@file.Description</p>
                                                }
                                            </div>
                                            <div class="text-right text-xs text-secondary-500">
                                                <div>@file.TableCount tables</div>
                                                <div>@file.FormattedFileSize</div>
                                                <div>@file.FormattedUploadDate</div>
                                            </div>
                                        </div>
                                    </div>
                                </label>
                            }
                        </div>
                        
                        <div class="text-center">
                            <a asp-action="ManageFiles" class="text-sm text-primary-600 hover:text-primary-500">
                                Manage Files â†’
                            </a>
                        </div>
                    </div>
                }
                
                <!-- Upload Tab -->
                <div x-show="activeTab === 'upload'" class="space-y-6">
                    <div class="card-header">
                        <h2 class="text-xl font-semibold text-secondary-900">Upload New Database</h2>
                        <p class="text-secondary-600 mt-1">
                            Select a SQLite database file (.db, .sqlite, .sqlite3) to get started. Maximum file size: 50MB.
                        </p>
                    </div>

                    <!-- File Upload Zone -->
                    <div class="upload-zone" x-data="{ dragging: false }" @@dragover.prevent="dragging = true"
                        @@dragleave="dragging = false" @@drop.prevent="dragging = false" :class="{ 'dragover': dragging }">
                        <input type="file" name="DatabaseFile" id="database-file" accept=".db,.sqlite,.sqlite3"
                            class="sr-only" />
                        <label for="database-file" class="cursor-pointer block" id="drop-label">
                            <div class="flex flex-col items-center">
                                <svg class="mx-auto h-12 w-12 text-secondary-400" stroke="currentColor" fill="none"
                                    viewBox="0 0 48 48">
                                    <path
                                        d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
                                        stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                <div class="mt-4">
                                    <p class="text-sm text-secondary-900">
                                        <span class="font-medium text-primary-600 hover:text-primary-500">Click to
                                            upload</span>
                                        or drag and drop
                                    </p>
                                    <p class="text-xs text-secondary-500 mt-1">SQLite files only (MAX. 50MB)</p>
                                </div>
                            </div>
                        </label>
                    </div>

                    <!-- Selected File Display -->
                    <div id="selected-file-name" class="hidden">
                        <div class="flex items-center p-3 bg-primary-50 border border-primary-200 rounded-lg">
                            <svg class="h-5 w-5 text-primary-600 mr-3" xmlns="http://www.w3.org/2000/svg"
                                viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd"
                                    d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
                                    clip-rule="evenodd" />
                            </svg>
                            <span class="text-sm text-primary-800 font-medium"></span>
                        </div>
                    </div>
                    
                    <!-- Persistence Options -->
                    <div class="space-y-4 p-4 bg-secondary-50 rounded-lg">
                        <div class="flex items-center">
                            <input asp-for="SaveForFutureUse" type="checkbox" id="save-for-future" 
                                   class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-secondary-300 rounded">
                            <label for="save-for-future" class="ml-2 text-sm text-secondary-900">
                                Save this file for future use
                            </label>
                        </div>
                        
                        <div x-show="document.getElementById('save-for-future').checked" class="mt-3">
                            <label asp-for="FileDescription" class="block text-sm font-medium text-secondary-700 mb-1">
                                Description (optional)
                            </label>
                            <input asp-for="FileDescription" type="text" 
                                   class="w-full px-3 py-2 border border-secondary-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500"
                                   placeholder="e.g., Customer database for Q4 2024">
                        </div>
                    </div>
                </div>

                <!-- Error Display -->
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div id="file-error" class="bg-red-50 border border-red-200 rounded-lg p-4">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                                    fill="currentColor">
                                    <path fill-rule="evenodd"
                                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                                        clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-red-800">@Model.ErrorMessage</p>
                            </div>
                        </div>
                    </div>
                }

                <!-- Submit Button -->
                <div class="flex justify-center">
                    <button type="submit"
                        class="btn-primary px-8 py-3 text-base font-medium shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200">
                        <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                            fill="currentColor">
                            <path fill-rule="evenodd"
                                d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
                                clip-rule="evenodd" />
                        </svg>
                        Analyze Database
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Features Section -->
    <div class="mt-16">
        <h2 class="text-3xl font-bold text-center text-secondary-900 mb-12">Features</h2>
        <div class="grid md:grid-cols-3 gap-8">
            <div class="text-center">
                <div class="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
                    <svg class="w-8 h-8 text-primary-600" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                </div>
                <h3 class="text-xl font-semibold text-secondary-900 mb-2">Schema Analysis</h3>
                <p class="text-secondary-600">Explore your database structure with detailed table and column
                    information, including data types and constraints.</p>
            </div>
            <div class="text-center">
                <div class="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
                    <svg class="w-8 h-8 text-primary-600" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                </div>
                <h3 class="text-xl font-semibold text-secondary-900 mb-2">CSV Export</h3>
                <p class="text-secondary-600">Export individual tables or entire databases to CSV format with
                    customizable options and high performance.</p>
            </div>
            <div class="text-center">
                <div class="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
                    <svg class="w-8 h-8 text-primary-600" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                    </svg>
                </div>
                <h3 class="text-xl font-semibold text-secondary-900 mb-2">Code Generation</h3>
                <p class="text-secondary-600">Generate C# model classes from your database schema to accelerate
                    development and ensure type safety.</p>
            </div>
        </div>
    </div>
</div>

<script>
    (function() {
        const fileInput = document.getElementById('database-file');
        const label = document.getElementById('drop-label');
        const selectedInfo = document.getElementById('selected-file-name');
        const selectedSpan = selectedInfo?.querySelector('span');
        const form = document.getElementById('upload-form');
        const errorDiv = document.getElementById('file-error');

        function showFileName(name) {
            if (selectedInfo && selectedSpan) {
                selectedSpan.textContent = name;
                selectedInfo.classList.remove('hidden');
            }
        }

        async function uploadFile(file) {
            const validExt = ['.db', '.sqlite', '.sqlite3'];
            const ext = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();
            if (!validExt.includes(ext)) { alert('Invalid file type'); return; }
            const fd = new FormData();
            fd.append('file', file);
            try {
                label.classList.add('opacity-50');
                const resp = await fetch('/api/upload', { method: 'POST', body: fd });
                const data = await resp.json();
                if (!resp.ok) { alert(data.error || 'Upload failed'); label.classList.remove('opacity-50'); return; }
                showFileName(file.name + ' (' + (data.tableCount ?? '?') + ' tables)');
                // Redirect to analyze after short pause
                setTimeout(() => { window.location.href = '/Home/Analyze'; }, 500);
            } catch (e) {
                alert('Upload error: ' + e);
            } finally {
                label.classList.remove('opacity-50');
            }
        }

        fileInput?.addEventListener('change', e => {
            const f = e.target.files?.[0];
            if (f) uploadFile(f);
        });

        label?.addEventListener('drop', e => {
            const f = e.dataTransfer.files?.[0];
            if (f) uploadFile(f);
        });
    })();
</script>
